defmodule LiveViewStudioWeb.ServersLive do
  use LiveViewStudioWeb, :live_view

  alias LiveViewStudio.Servers

  def mount(_params, _session, socket) do
    servers = Servers.list_servers()

    # Using temporary_assigns is not a good fit for this because server list is
    # needed when a live-patch link is clicked.
    socket =
      assign(socket,
        servers: servers,
        selected_server: hd(servers)
      )

    {:ok, socket}
  end

  @doc """
  ## When `handle_params` is invoked

  1. when the LiveView is mounted.
  2. when a link generated by `live_patch` is clicked.

  ## Where to assign state

  - In `handle_params` if you have state the can change as you navigate based on
  URL query params.
  - In mount otherwise.

  """
  def handle_params(%{"id" => id}, _url, socket) do
    id = String.to_integer(id)
    server = Servers.get_server!(id)
    socket =
      assign(socket,
        selected_server: server,
        page_title: server.name
      )

    {:noreply, socket}
  end

  # Handles a URL with no params.
  def handle_params(_, _url, socket) do
    {:noreply, socket}
  end

  defp link_body(server) do
    assigns = %{name: server.name}

    ~L"""
    <img src="/images/server.svg">
    <%= @name %>
    """
  end
end
